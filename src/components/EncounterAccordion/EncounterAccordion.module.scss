@use "@/styles/constants";

.encounter-accordion {
    --accordion-width: 350px;
    --accordion-x-padding: 2rem;
    --accordion-y-padding: 1.5rem;
    --arrow-size: 12px;
    --arrow-transition-time: 0.2s;
    --cell-extra-padding: 2rem;
    --cell-font-size: 1rem;
    --cell-x-padding: 1rem;
    --cell-y-padding: 1rem;
    --category-font-size: 1.2rem;
    --category-left-offset: 2.5rem;
    --category-y-padding: 1.5rem;
    --info-inner-spacing: 0.25rem;
    --method-font-size: 1.4rem;
    --main-inner-spacing: 4px;
    --name-font-size: 1rem;
    --sprite-size: 90px;
    --table-border-size: 1px;
    --tier-border-rad: 2px;
    --tier-font-size: 0.8rem;
    --tier-x-padding: 0.2rem;
    --tier-y-padding: 0.1rem;
    --tier-size: 1.2rem;
    --type-ratio: 8/3;
    --type-height: 12px;
    --types-inner-spacing: 4px;

    width: var(--accordion-width);

    .header {
        align-items: center;
        background: constants.$accent-color;
        display: flex;
        justify-content: space-between;
        padding: var(--accordion-y-padding) var(--accordion-x-padding);
        width: 100%;

        .method {
            font-size: var(--method-font-size);
        }

        .arrow {
            filter: constants.$svg-color;
            height: var(--arrow-size);
            position: relative;
            transition: transform var(--arrow-transition-time);
            width: var(--arrow-size);
        }

        .reversed {
            transform: rotate(180deg);
        }
    }

    .body {
        border-top: var(--table-border-size) solid constants.$text-color;
        padding: none;
        width: 100%;

        .row {
            background: constants.$accent-color;

            .category {
                font-size: var(--category-font-size);
                padding: var(--category-y-padding) var(--cell-x-padding);
            }

            .cell {
                font-size: var(--cell-font-size);
                padding: var(--cell-y-padding) var(--cell-x-padding);
                text-align: center;

                .pokemon {
                    align-items: center;
                    display: flex;
                    flex-direction: column;
                    gap: var(--info-inner-spacing);

                    .sprite {
                        height: var(--sprite-size);
                        position: relative;
                        width: var(--sprite-size);
                    }

                    .name {
                        font-size: var(--name-font-size);
                    }

                    .types {
                        display: flex;
                        gap: var(--types-inner-spacing);

                        .type {
                            height: var(--type-height);
                            position: relative;
                            width: calc(var(--type-height) * var(--type-ratio));
                        }
                    }
                }

                .tier {
                    border-radius: var(--tier-border-rad);
                    font-size: var(--tier-font-size);
                    font-weight: bold;
                    padding: var(--tier-y-padding) var(--tier-x-padding);
                }
            }

            &:last-child {
                .cell {
                    padding-bottom: var(--cell-extra-padding);
                }
            }
        }
    }

    .hidden {
        display: none;
    }
}

@media screen and (min-width: constants.$tablet) {
    .encounter-accordion {
        --accordion-width: 750px;
        --main-inner-spacing: 8px;
        --name-font-size: 1.2rem;
        --sprite-size: 100px;
        --table-el-x-padding: 3rem;
        --tier-font-size: 1rem;
        --tier-size: 1.4rem;
        --tier-x-padding: 0.5rem;
    }
}

@media (hover: hover) {
    .encounter-accordion > .header:hover {
        .arrow {
            filter: constants.$svg-hover-color;
        }
    }
}
