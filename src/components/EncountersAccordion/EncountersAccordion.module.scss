@use "@/styles/constants";

.encounters-accordion {
    --accordion-width: 350px;
    --arrow-offset: 1rem;
    --arrow-size: 12px;
    --header-inner-spacing: 4px;
    --name-font-size: 1rem;
    --name-spacing: 4px;
    --sprite-size: 90px;
    --table-border-size: 1px;
    --table-el-x-padding: 1rem;
    --table-el-y-padding: 0.5rem;
    --table-font-size: 1rem;
    --tier-border-rad: 2px;
    --tier-font-size: 0.8rem;
    --tier-x-padding: 0.2rem;
    --tier-y-padding: 0.1rem;
    --tier-size: 1.2rem;
    --transition-time: 0.2s;
    --type-ratio: 8/3;
    --type-height: 12px;
    --x-padding: 1rem;

    width: var(--accordion-width);

    .header {
        align-items: center;
        background: constants.$accent-color;
        display: flex;
        padding: 0 var(--x-padding);
        position: relative;
        width: 100%;

        .sprite {
            height: var(--sprite-size);
            position: relative;
            width: var(--sprite-size);
        }

        .info {
            display: flex;
            flex-direction: column;
            gap: var(--header-inner-spacing);

            .row {
                align-items: center;
                display: flex;
                gap: var(--header-inner-spacing);

                .name {
                    font-size: var(--name-font-size);
                }

                .tier {
                    border-radius: var(--tier-border-rad);
                    font-family: constants.$tier-font;
                    font-size: var(--tier-font-size);
                    font-weight: bold;
                    line-height: var(--tier-font-size);
                    padding: var(--tier-y-padding) var(--tier-x-padding);
                }

                .type {
                    height: var(--type-height);
                    position: relative;
                    width: calc(var(--type-height) * var(--type-ratio));
                }
            }

            .top-row {
                gap: var(--name-spacing);
            }
        }

        .arrow {
            filter: constants.$svg-color;
            height: var(--arrow-size);
            position: absolute;
            transition: transform var(--transition-time);
            right: var(--arrow-offset);
            width: var(--arrow-size);
        }

        .reversed {
            transform: rotate(180deg);
        }
    }

    .body {
        border-top: var(--table-border-size) solid constants.$text-color;
        padding: none;
        width: 100%;

        .table-row {
            .table-header,
            .table-element {
                background-color: constants.$accent-color;
                font-size: var(--table-font-size);
                padding: var(--table-el-y-padding) var(--table-el-x-padding);
                text-align: center;
                white-space: pre-line;
                width: calc(100% / 3);
            }
        }
    }
}

@media screen and (min-width: constants.$tablet) {
    .encounters-accordion {
        --accordion-width: 500px;
        --name-font-size: 1.2rem;
        --name-spacing: 8px;
        --tier-font-size: 1rem;
        --tier-size: 1.4rem;
        --tier-x-padding: 0.4rem;
        --tier-y-padding: 0.2rem;
    }
}

@media screen and (min-width: constants.$desktop) {
    .encounters-accordion {
        --accordion-width: 750px;
        --sprite-size: 100px;
    }
}
